[
  {
    "objectID": "ex_analysis2.html",
    "href": "ex_analysis2.html",
    "title": "Example Data Analysis",
    "section": "",
    "text": "Question: How does running pace change with race distance for recreational runners who use Strava?\nAudience: Runners, running fans, Strava users!\nLink to data and data dictionary: Kaggle Strava Data\n\nThe data contain information about 42,000 running races from 116 amateur Strava users\nVariables include unique athlete ID, gender, timestamp, distance of the race, elapsed time of the race, elevation gain, and average heart rate"
  },
  {
    "objectID": "ex_analysis2.html#defining-elite",
    "href": "ex_analysis2.html#defining-elite",
    "title": "Example Data Analysis",
    "section": "Defining Elite",
    "text": "Defining Elite\nWe define elite as any athlete who meets one of the following criteria:\n\n\n\nDistance\nMale\nFemale\n\n\n\n\n5km\n5:12 min/mile\n6:30 min/mile\n\n\n10km\n6:00 min/mile\n6:48 min/mile\n\n\nHalf -marathon\n6:15 min/mile\n7:15 min/mile\n\n\nMarathon\n6:45 min/mile\n7:45 min/mile\n\n\n\n\nelites <- strava_data %>% mutate(\n  elite_performance = case_when(\n    gender == \"F\" &\n      distance_m <= 5100 &\n      distance_m >= 4900 & pace_per_mi <= 6.5 ~ 1,\n    gender == \"F\" &\n      distance_m <= 11000 &\n      distance_m >= 9900 & pace_per_mi <= 6.8 ~ 2,\n    gender == \"M\" &\n      distance_m <= 5100 &\n      distance_m >= 4900 & pace_per_mi <= 5.2 ~ 3,\n    gender == \"M\" &\n      distance_m <= 11000 &\n      distance_m >= 9900 & pace_per_mi <= 6 ~ 4,\n    gender == \"F\" &\n      distance_mi <= 13.2 &\n      distance_mi >= 12.9 & pace_per_mi <= 7.25 ~ 5,\n    gender == \"F\" &\n      distance_mi <= 26.4 &\n      distance_mi >= 25.8 & pace_per_mi <= 7.75 ~ 6,\n    gender == \"M\" &\n      distance_mi <= 13.2 &\n      distance_mi >= 12.9 & pace_per_mi <=  6.25 ~ 7,\n    gender == \"M\" &\n      distance_mi <= 26.4 &\n      distance_mi >= 25.8 & pace_per_mi <= 6.75 ~ 8,\n    TRUE ~ 0\n  )\n) %>% filter(elite_performance != 0) %>% dplyr::select(athlete) %>% unlist()\n\nstrava_data %>% filter(gender == \"F\" &\n                         athlete %in% elites) %>% ggplot(aes(\n                           x = distance_mi,\n                           y = pace_per_mi,\n                           col = as.factor(athlete)\n                         )) +\n  geom_point(alpha = .5) + geom_smooth(col = \"darkgrey\", alpha = .4, se =\n                                         F) + facet_wrap(. ~ athlete, labeller = labeller(athlete = labs)) +\n  labs(\n    x = \"Distance (mi)\",\n    y = \"Pace (min/mi)\",\n    title = \"Distance vs. Pace\",\n    subtitle = \"Elite Women\"\n  ) +\n  theme(legend.position = \"none\") + scale_x_continuous(breaks = seq(0, 25, 5)) +\n  scale_y_continuous(breaks = seq(4, 16, 2))\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\nstrava_data %>% filter(gender == \"F\" &\n                         athlete %in% elites) %>% ggplot(aes(\n                           x = distance_m,\n                           y = mph,\n                           col = as.factor(athlete)\n                         )) +\n  geom_point(alpha = .5) + geom_smooth(col = \"darkgrey\", alpha = .4, se =\n                                         F) + facet_wrap(. ~ athlete, labeller = labeller(athlete = labs)) +\n  labs(\n    x = \"Distance (mi)\",\n    y = \"Speed (mph)\",\n    title = \"Distance vs. Speed\",\n    subtitle = \"Elite Women\"\n  ) +\n  theme(legend.position = \"none\") + scale_x_continuous(\n    trans = log10_trans(),\n    breaks = trans_breaks(\"log10\", function(x)\n      10 ^ x),\n    labels = trans_format(\"log10\", math_format(10 ^ .x))\n  ) + scale_y_continuous(breaks = seq(4, 16, 2))\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\nstrava_data %>% filter(gender == \"M\" &\n                         athlete %in% elites) %>% ggplot(aes(\n                           x = distance_mi,\n                           y = pace_per_mi,\n                           col = as.factor(athlete)\n                         )) +\n  geom_point(alpha = .5) + geom_smooth(col = \"darkgrey\", alpha = .4, se =\n                                         F) + facet_wrap(. ~ athlete, labeller = labeller(athlete = labs)) +\n  labs(\n    x = \"Distance (mi)\",\n    y = \"Pace (min/mi)\",\n    title = \"Distance vs. Pace\",\n    subtitle = \"Elite Men\"\n  ) +\n  theme(legend.position = \"none\") + scale_x_continuous(breaks = seq(0, 25, 5)) +\n  scale_y_continuous(breaks = seq(4, 16, 2))\n\n`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'\n\n\n\n\nstrava_data %>% filter(gender == \"M\" &\n                         athlete %in% elites) %>% ggplot(aes(\n                           x = distance_m,\n                           y = mph,\n                           col = as.factor(athlete)\n                         )) +\n  geom_point(alpha = .5) + geom_smooth(col = \"darkgrey\", alpha = .4, se =\n                                         F) + facet_wrap(. ~ athlete, labeller = labeller(athlete = labs)) +\n  labs(\n    x = \"Distance (mi)\",\n    y = \"Speed (mph)\",\n    title = \"Distance vs. Speed\",\n    subtitle = \"Elite Men\"\n  ) +\n  theme(legend.position = \"none\") + scale_x_continuous(\n    trans = log10_trans(),\n    breaks = trans_breaks(\"log10\", function(x)\n      10 ^ x),\n    labels = trans_format(\"log10\", math_format(10 ^ .x))\n  ) + scale_y_continuous(breaks = seq(4, 16, 2))\n\n`geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = \"cs\")'"
  },
  {
    "objectID": "ex_analysis.html",
    "href": "ex_analysis.html",
    "title": "Example Data Analysis",
    "section": "",
    "text": "Question: How does running pace change with race distance for recreational runners who use Strava?\nAudience: Runners, running fans, Strava users!\nLink to data and data dictionary: Kaggle Strava Data\n\nThe data contain information about 42,000 running races from 116 amateur Strava users\nVariables include unique athlete ID, gender, timestamp, distance of the race, elapsed time of the race, elevation gain, and average heart rate"
  },
  {
    "objectID": "ex_analysis.html#functions-used",
    "href": "ex_analysis.html#functions-used",
    "title": "Example Data Analysis",
    "section": "Functions Used",
    "text": "Functions Used\ndplyr/tidyverse: rename, mutate, separate, filter, group_by, summarize, case_when\nggplot2: facet_wrap, geom_point, geom_smooth, geom_errorbarh"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lilyâ€™s Website",
    "section": "",
    "text": "Biostatistics PhD student; lover of outdoor activities including but not limited to skiing running and cycling; amateur sourdough baker"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "I was born and raised in Orono, Maine. I received my BA in Statistics from Harvard University in 2019, where I competed on and eventually captained the Division I Nordic Ski Team. After getting a taste of research in public health and biostatistics from undergraduate classes, I pursued an MS in Biostatistics from the Harvard Chan School of Public Health, where I worked on electronic health records-based research. In summer 2019 and summer 2020, I worked for US Ski and Snowboard as a high performance intern and Women in Sports Technology (WiST) Fellow; my research projects included visualizing force plate output, using machine learning to predicting performance from training data, and modeling medal probabilities to inform team selection criteria. Currently, I'm a first year PhD Candidate in Biostatistics at Johns Hopkins Bloomberg School of Public Health and hope to undertake research in methods for and applications of data from wearable technology. Broadly, my interests lie at the intersection of statistics, public health, human performance, and sports science"
  }
]